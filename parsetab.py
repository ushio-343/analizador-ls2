
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'CLASS CLOSE_BRACE CLOSE_PAREN COMMA DOT EQUAL ID MAIN NUMBER OPEN_BRACE OPEN_PAREN PLUS PRINTLN PUBLIC SEMICOLON STATIC STRING VOIDprogram : PUBLIC CLASS ID OPEN_BRACE main_method CLOSE_BRACEmain_method : PUBLIC STATIC VOID MAIN OPEN_PAREN STRING CLOSE_BRACE OPEN_BRACE statement_list CLOSE_BRACE CLOSE_PARENstatement_list : statement\n                      | statement_list statementstatement : println_statementprintln_statement : PRINTLN OPEN_PAREN STRING CLOSE_PAREN SEMICOLON'
    
_lr_action_items = {'PUBLIC':([0,5,],[2,6,]),'$end':([1,9,],[0,-1,]),'CLASS':([2,],[3,]),'ID':([3,],[4,]),'OPEN_BRACE':([4,14,],[5,15,]),'STATIC':([6,],[8,]),'CLOSE_BRACE':([7,13,16,17,18,21,23,26,],[9,14,20,-3,-5,-4,-2,-6,]),'VOID':([8,],[10,]),'MAIN':([10,],[11,]),'OPEN_PAREN':([11,19,],[12,22,]),'STRING':([12,22,],[13,24,]),'PRINTLN':([15,16,17,18,21,26,],[19,19,-3,-5,-4,-6,]),'CLOSE_PAREN':([20,24,],[23,25,]),'SEMICOLON':([25,],[26,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'main_method':([5,],[7,]),'statement_list':([15,],[16,]),'statement':([15,16,],[17,21,]),'println_statement':([15,16,],[18,18,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PUBLIC CLASS ID OPEN_BRACE main_method CLOSE_BRACE','program',6,'p_program','app.py',59),
  ('main_method -> PUBLIC STATIC VOID MAIN OPEN_PAREN STRING CLOSE_BRACE OPEN_BRACE statement_list CLOSE_BRACE CLOSE_PAREN','main_method',11,'p_main_method','app.py',63),
  ('statement_list -> statement','statement_list',1,'p_statement_list','app.py',67),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','app.py',68),
  ('statement -> println_statement','statement',1,'p_statement','app.py',75),
  ('println_statement -> PRINTLN OPEN_PAREN STRING CLOSE_PAREN SEMICOLON','println_statement',5,'p_println_statement','app.py',79),
]
